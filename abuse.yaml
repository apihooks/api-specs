---
swagger: '2.0'

info:
  version: alpha
  title: Apihooks abuse API
  description: |
    This is the alpha version of Apihooks abuse api. The goal of this api is to provide tools to
    detect and prevent abuse of `users` api.

    To get started, register your app at https://apihookshq.com.

    See https://github.com/apihooks/apis for more general principles of Apihooks apis.

    TODO:
      support blocking of countries by IP
      support throttling of IPs and email domains

##### General #####
host: abuse.apihookshq.com
basePath: /alpha
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json

##### Security #####
securityDefinitions:
  key:
    type: apiKey
    in: header
    name: token
security:
  - key: []

##### Parameters #####
parameters:
  domain:
    name: domain
    in: path
    type: string
  ip:
    name: ip
    in: path
    type: string


##### Paths #####
paths:
  /abusive:
    get:
      security:
        - key: []
      description: Checks if user matches one or more of specified blacklists.
      parameters:
        - in: formData
          name: email
          required: true
          type: string
        - in: formData
          name: fromIpAddress
          description: IPv4 or IPv6 address users signed up from.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Abusive'
        400:
          description: Bad request.
          schema:
            $ref: '#/definitions/Error'


##### Settings #####
  /settings:
    get:
      security:
        - key: []
      description: Returns user settings for api.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Settings'
    put:
      security:
        - key: []
      description: Update user settings.
      responses:
        200:
          description: OK


##### EmailDomains #####
  /emaildomains/{domain}:
    parameters:
      - $ref: '#/parameters/domain'
    get:
      security:
        - key: []
      description: Returns status of email, i.e. is it whitelisted or blacklisted.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Status'

  /emaildomains/{domain}/blacklist:
    parameters:
      - $ref: '#/parameters/domain'
    put:
      security:
        - key: []
      description: Add domain to list of blacklists.
      responses:
        200:
          description: OK
    delete:
      security:
        - key: []
      description: Remove domain from list of blacklists.
      responses:
        200:
          description: OK

  /emaildomains/{domain}/whitelist:
    parameters:
      - $ref: '#/parameters/domain'
    put:
      security:
        - key: []
      description: Add domain to list of whitelists.
      responses:
        200:
          description: OK
    delete:
      security:
        - key: []
      description: Remove domain from list of whitelists.
      responses:
        200:
          description: OK


##### IpAddresses #####
  /ipaddress/{ip}:
    parameters:
      - $ref: '#/parameters/ip'
    get:
      security:
        - key: []
      description: Returns status of ipaddres, i.e. is it whitelisted or blacklisted.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Status'

  /ipaddress/{ip}/blacklist:
    parameters:
      - $ref: '#/parameters/ip'
    put:
      security:
        - key: []
      description: Add ip to list of blacklists.
      responses:
        200:
          description: OK
    delete:
      security:
        - key: []
      description: Remove ip from list of blacklists.
      responses:
        200:
          description: OK

  /ipaddress/{ip}/whitelist:
    parameters:
      - $ref: '#/parameters/ip'
    put:
      security:
        - key: []
      description: Add ip to list of whitelists.
      responses:
        200:
          description: OK
    delete:
      security:
        - key: []
      description: Remove ip from list of whitelists.
      responses:
        200:
          description: OK


##### Definitions #####
definitions:
  Abusive:
    type: object
    properties:
      blacklisted:
        type: boolean
      reason:
        type: string
  Status:
    type: object
    properties:
      status:
        type: string
  Settings:
    type: object
    properties:
      blockAbusiveDomains:
        type: boolean
      blockAbusiveIps:
        type: boolean
      blockSubdomains:
        type: boolean
      blockRedirects:
        type: boolean
      blockUnreachables:
        type: boolean
  Error:
    type: object
    properties:
      error:
        type: string
